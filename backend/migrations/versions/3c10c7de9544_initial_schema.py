"""initial schema

Revision ID: 3c10c7de9544
Revises: b3386073d499
Create Date: 2025-10-06 14:26:10.005467

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3c10c7de9544'
down_revision = 'b3386073d499'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('members', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.alter_column('full_name',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.String(length=200),
               nullable=False)
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=30),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=30),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.drop_constraint(batch_op.f('members_email_key'), type_='unique')
        batch_op.drop_constraint(batch_op.f('members_username_key'), type_='unique')
        batch_op.create_index(batch_op.f('ix_members_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_members_username'), ['username'], unique=True)

    with op.batch_alter_table('reservation_fees', schema=None) as batch_op:
        batch_op.add_column(sa.Column('calculated_at', sa.DateTime(), nullable=True))
        batch_op.create_index(batch_op.f('ix_reservation_fees_reservation_id'), ['reservation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reservation_fees_rule_id'), ['rule_id'], unique=False)
        batch_op.drop_column('applied_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reservation_fees', schema=None) as batch_op:
        batch_op.add_column(sa.Column('applied_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_reservation_fees_rule_id'))
        batch_op.drop_index(batch_op.f('ix_reservation_fees_reservation_id'))
        batch_op.drop_column('calculated_at')

    with op.batch_alter_table('members', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_members_username'))
        batch_op.drop_index(batch_op.f('ix_members_email'))
        batch_op.create_unique_constraint(batch_op.f('members_username_key'), ['username'], postgresql_nulls_not_distinct=False)
        batch_op.create_unique_constraint(batch_op.f('members_email_key'), ['email'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('role',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=30),
               existing_nullable=True)
        batch_op.alter_column('phone',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=30),
               existing_nullable=True)
        batch_op.alter_column('full_name',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=80),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)

    # ### end Alembic commands ###
